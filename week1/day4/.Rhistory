subresults = correlations[abs(correlations) > .10]
names(subresults) = names(correlations)[abs(correlations) > .10]
subresults
correlations[abs(correlations) > .10]
names(subresults) = names(correlations)[abs(correlations) > .10]
subresults
names(correlations)[abs(correlations) > .10]
names(subresults) = rownames(correlations)[abs(correlations) > .10]
subresults
matrx(subresults)
matrix(subresults)
subresults
correlations = cor(beautyData,beautyData$courseevaluation)
subresults = correlations[abs(correlations) > .15]
names(subresults) = rownames(correlations)[abs(correlations) > .15]
subresults
cor(beautyData$profevaluation, beautyData$btystdave)
cor(beautyData$percentevaluating, beautyData$btystdave)
cor(beautyData$onecredit, beautyData$btystdave)
beautyData = read.csv("beauty/ProfEvaltnsBeautyPublic.csv")
View(beautyData)
names(beautyData)
beautyModel = lm(courseevaluation ~ btystdave + profevaluation + onecredit, data = beautyData)
fitBeauty = fitted(beautyModel)
beautyData = mutate(beautyData,fitBeauty)
plot(beautyModel)
plot(beautyModel)
ggplot(beautyData, aes(x = btystdave, y = courseevaluation)) + geom_point() + geom_line(aes(y = fitBeauty))
fitBeauty = fitted(beautyModel)
beautyData = mutate(beautyData,fitBeauty)
plot(beautyModel)
ggplot(beautyData, aes(x = btystdave, y = courseevaluation)) + geom_point() + geom_line(aes(y = fitBeauty))
ggplot(beautyData, aes(x = btystdave, y = courseevaluation)) + geom_point() + geom_line(aes(y = fitBeauty, group=one_credit))
ggplot(beautyData, aes(x = btystdave, y = courseevaluation)) + geom_point() + geom_line(aes(y = fitBeauty, group=onecredit))
ggplot(beautyData, aes(x = btystdave, y = courseevaluation, group=profevalution)) + geom_point() + geom_line(aes(y = fitBeauty, group=profevalution))
ggplot(beautyData, aes(x = btystdave, y = courseevaluation, group=profevaluation)) + geom_point() + geom_line(aes(y = fitBeauty, group=profevaluation))
beautyData = read.csv("beauty/ProfEvaltnsBeautyPublic.csv")
View(beautyData)
names(beautyData)
beautyModel = lm(courseevaluation ~ btystdave, data = beautyData)
fitBeauty = fitted(beautyModel)
beautyData = mutate(beautyData,fitBeauty)
# plot(beautyModel)
ggplot(beautyData, aes(x = btystdave, y = courseevaluation)) + geom_point() + geom_line(aes(y = fitBeauty))
summary(fitBeauty)
summary(beautyModel)
correlations = cor(beautyData,beautyData$courseevaluation)
subresults = correlations[abs(correlations) < .15]
names(subresults) = rownames(correlations)[abs(correlations) < .15]
subresults
correlations = cor(beautyData,beautyData$courseevaluation, beautyData$bystdave)
correlations = cor(beautyData,beautyData$courseevaluation, beautyData$bystdave)
subresults = correlations[(abs(correlations[,1]) > .10) & abs(correlations[,2]) < .10]
names(subresults) = rownames(correlations)[(abs(correlations[,1]) > .10) & abs(correlations[,2]) < .10]
subresults
correlations
correlations = cor(beautyData,beautyData$courseevaluation, beautyData$btystdave)
correlations = cbind(cor(beautyData,beautyData$courseevaluation), cor(beautyData,beautyData$btystdave))
correlations
subresults = correlations[(abs(correlations[,1]) > .10) & abs(correlations[,2]) < .10]
names(subresults) = rownames(correlations)[(abs(correlations[,1]) > .10) & abs(correlations[,2]) < .10]
subresults
correlations = cbind(cor(beautyData,beautyData$courseevaluation), cor(beautyData,beautyData$btystdave))
correlations
class(correlations)
filter(correlations, course > .10, beauty < .10)
filter(as.data.frame(correlations), course > .10, beauty < .10)
subresults = filter(as.data.frame(correlations), course > .10, beauty < .10)
correlations
colNames(correlations) = c("course", "beauty")
colnames(correlations) = c("course", "beauty")
correlations
head(correlations)
subresults = filter(as.data.frame(correlations), course > .10, beauty < .10)
subresults
correlations = cbind(cor(beautyData,beautyData$courseevaluation), cor(beautyData,beautyData$btystdave))
colnames(correlations) = c("course", "beauty")
correlations
as.data.frame(correlations) %>% mutate(thenames = rownames(beauty)) %>%
filter(course > .10, beauty < .10) -> subresults
subresults
cbind(data.frame(correlations), thenames = rownames(correlations))
cbind(data.frame(correlations), thenames = rownames(correlations)) %>%
filter(course > .10, beauty < .10) -> subresults
subresults
cbind(data.frame(correlations), thenames = rownames(correlations)) %>%
filter(course > .07, beauty < .07) -> subresults
subresults
ggplot(beautyData, aes(x = btystdave, y = courseevaluation, color = lower)) + geom_point() + geom_line(aes(y = fitBeauty))
(ggplot(beautyData, aes(x = btystdave, y = courseevaluation, color = lower))
+ geom_point()
+ geom_line(aes(y = fitBeauty, group = lower)))
(ggplot(beautyData, aes(x = btystdave, y = courseevaluation, color = lower, group = lower))
+ geom_point()
+ geom_line(aes(y = fitBeauty, group = lower)))
(ggplot(beautyData, aes(x = btystdave, y = courseevaluation, color = lower, group = lower))
+ geom_point()
+ geom_line(aes(y = courseevaluation, group = lower)))
(ggplot(beautyData, aes(x = btystdave, y = courseevaluation, color = lower, group = lower))
+ geom_point()
+ geom_smooth(aes(y = courseevaluation, group = lower)))
mean(beautyData$courseevaluation[beautyData$lower == 1])
mean(beautyData$courseevaluation[beautyData$lower == 0])
mean(beautyData$courseevaluation[beautyData$onecredit == 1])
mean(beautyData$courseevaluation[beautyData$onecredit == 0])
(ggplot(beautyData, aes(x = btystdave, y = courseevaluation, color = onecredit, group = onecredit))
+ geom_point()
(ggplot(beautyData, aes(x = btystdave, y = courseevaluation, color = onecredit, group = onecredit))
+ geom_point()
+ geom_line(aes(y = courseevaluation)))
(ggplot(beautyData, aes(x = btystdave, y = courseevaluation, color = onecredit, group = onecredit))
+ geom_point()
+ geom_line(aes(y = courseevaluation)))
)
(ggplot(beautyData, aes(x = btystdave, y = courseevaluation, color = onecredit, group = onecredit))
+ geom_point()
+ geom_line(aes(y = courseevaluation)))
(ggplot(beautyData, aes(x = btystdave, y = courseevaluation, color = onecredit))
+ geom_point()
+ geom_line(aes(y = courseevaluation, group = onecredit)))
(ggplot(beautyData, aes(x = btystdave, y = courseevaluation, color = onecredit))
+ geom_point()
+ geom_line(aes(y = fitBeauty, group = onecredit)))
(ggplot(beautyData, aes(x = btystdave, y = courseevaluation, color = onecredit))
+ geom_jitter(width=.3)
+ geom_line(aes(y = fitBeauty, group = onecredit)))
beautyData = read.csv("beauty/ProfEvaltnsBeautyPublic.csv")
# View(beautyData)
names(beautyData)
beautyModel = lm(courseevaluation ~ btystdave + onecredit + btystdave*onecredit, data = beautyData)
fitBeauty = fitted(beautyModel)
beautyData = mutate(beautyData,fitBeauty)
# plot(beautyModel)
(ggplot(beautyData, aes(x = btystdave, y = courseevaluation, color = onecredit))
+ geom_jitter(width=.3)
+ geom_line(aes(y = fitBeauty, group = onecredit)))
correlations = cbind(cor(beautyData,beautyData$courseevaluation), cor(beautyData,beautyData$btystdave))
colnames(correlations) = c("course", "beauty")
correlations
cbind(data.frame(correlations), thenames = rownames(correlations)) %>%
filter(course > .07, beauty > .07) -> subresults
subresults
filter(course > .2, beauty > .2) -> subresults
correlations = cbind(cor(beautyData,beautyData$courseevaluation), cor(beautyData,beautyData$btystdave))
colnames(correlations) = c("course", "beauty")
correlations
cbind(data.frame(correlations), thenames = rownames(correlations)) %>%
filter(course > .2, beauty > .2) -> subresults
subresults
correlations = cbind(cor(beautyData,beautyData$courseevaluation), cor(beautyData,beautyData$btystdave))
colnames(correlations) = c("course", "beauty")
correlations
cbind(data.frame(correlations), thenames = rownames(correlations)) %>%
filter(course > .1, beauty > .1) -> subresults
subresults
correlations = cbind(cor(beautyData,beautyData$courseevaluation), cor(beautyData,beautyData$btystdave))
colnames(correlations) = c("course", "beauty")
correlations
cbind(data.frame(correlations), thenames = rownames(correlations)) %>%
filter(course > .15, beauty > .15) -> subresults
subresults
plot(x = beautyData$profevaluation)
plot(x = beautyData$profevaluation, y = beautyData$btystdave)
plot(x = beautyData$profevaluation, y = beautyData$courseevaluation)
profmodel = lm(beautyData, courseevaluation ~ profevaluation)
profmodel = lm(ourseevaluation ~ profevaluation, data = beautyData)
profmodel = lm(courseevaluation ~ profevaluation, data = beautyData)
plot(profmodel)
profmodel = lm(courseevaluation ~ profevaluation + blkandwhite, data = beautyData)
plot(profmodel)
profmodel = lm(courseevaluation ~ btystdave + blkandwhite, data = beautyData)
plot(profmodel)[1]
View(beautyData)
profmodel = lm(courseevaluation ~ btystdave + blkandwhite + blkandwhite*btystdave, data = beautyData)
summary(profmodel)
beauty_courseval_model = lm(courseevaluation  ~ btystdave + tenured + minority + age + female + nonenglish + lower + tenuretrack + formal, beauty_df)
beauty_df = beautyData
beauty_courseval_model = lm(courseevaluation  ~ btystdave + tenured + minority + age + female + nonenglish + lower + tenuretrack + formal, beauty_df)
min_beauty_courseval_model = lm(courseevaluation ~ 1, beauty_df)
formula_max_beauty_courseval_model = formula(beauty_courseval_model)
step(min_beauty_courseval_model, direction='forward', scope=formula_max_beauty_courseval_model)
?step
best_courseval_model = lm(courseevaluation  ~ btystdave + female + nonenglish + tenuretrack + lower + formal + age, beauty_df)
summary(best_courseval_model)
plot(best_courseval_model)
summary(best_courseval_model)
summary(lm(courseevaluation ~ btystdave, beauty_df))
summary(min_beauty_courseval_model)
View(beautyData)
ggplot(beauty_df) + geom_density(aes(x=courseevaluation))
ggpairs(beauty_df)
library("GGally")
ggpairs(beauty_df)
names(beauty_df)
plot(beauty_df$didevaluation, beauty_df$courseevaluation)
plot(beauty_df$courseevaluation, beauty_df$didevaluation)
plot(beauty_df$courseevaluation, log(beauty_df$didevaluation))
summary(lm(courseevaluation ~ log(beauty_df$didevaluation), beauty_df))
summary(lm(courseevaluation ~ log(beauty_df$didevaluation) ~ lower, beauty_df))
summary(lm(courseevaluation ~ log(beauty_df$didevaluation) + lower, beauty_df))
ggpairs(beauty_df)
ggplot(beauty_df, aes(x=courseevaluatiion, y = log(didevaluation), color=age)) + geom_point()
ggplot(beauty_df, aes(x=courseevaluation, y = log(didevaluation), color=age)) + geom_point()
ggplot(beauty_df, aes(x=courseevaluation, y = log(didevaluation), color=female)) + geom_point()
ggplot(beauty_df, aes(x=courseevaluation, y = log(didevaluation), color=female)) + geom_point() + geom_smooth()
ggplot(beauty_df, aes(x=courseevaluation, y = log(didevaluation), color=female)) + geom_point() + geom_smooth(formula = courseevaluation ~ female)
ggplot(beauty_df, aes(x=courseevaluation, y = log(didevaluation), color=female)) + geom_point() + geom_smooth(formula = courseevaluation ~ log(didevaluation))
ggplot(beauty_df, aes(x=courseevaluation, y = log(didevaluation), group=female)) + geom_point() + geom_smooth(formula = courseevaluation ~ log(didevaluation))
ggplot(beauty_df, aes(x=courseevaluation, y = log(didevaluation), group=female)) + geom_point() + geom_smooth(formula = courseevaluation ~ log(didevaluation), group=female)
ggplot(beauty_df, aes(x=courseevaluation, y = log(didevaluation)) + geom_point() + geom_smooth(formula = courseevaluation ~ log(didevaluation))
)
ggplot(beauty_df, aes(x=courseevaluation, y = log(didevaluation))) + geom_point() + geom_smooth(formula = courseevaluation ~ log(didevaluation))
ggplot(beauty_df, aes(x=courseevaluation, y = log(didevaluation))) + geom_point() + geom_smooth(formula = y ~ x))
ggplot(beauty_df, aes(x=courseevaluation, y = log(didevaluation))) + geom_point() + geom_line()
?geom_smooth
ggplot(beauty_df, aes(x=courseevaluation, y = log(didevaluation))) + geom_point() + geom_smooth(method=lm)
iq.data = foreign::read.dta("child.iq/child.iq.dta")
idx = sample(1:400, 200)
train = iq.data[idx,]
test = iq.data[-idx,]
rownames(train) = 1:200
rownames(test) = 1:200
train = make_sensible(train)
test = make_sensible(test)
iqModelTrain = lm(adj_ppvt ~ adj_age + high_schooled + adj_age*high_schooled, data=train)
fittedModel = data.frame(fits = fitted(iqModelTrain), educ_cat = train$educ_cat, adj_age = train$adj_age)
ggplot(test, aes(x = adj_age, y = adj_ppvt, color = educ_cat)) + geom_jitter(width=.5) + geom_line(data=fittedModel, aes(y = fits, group=educ_cat))
?fitted
?predict
residuals = dataframe(testx = test["adj_age"] + meanMomage, resid = adj_ppvt - predict(iqModelTrain, test) + meanPPVT)
residuals = data.frame(testx = test["adj_age"] + meanMomage, resid = adj_ppvt - predict(iqModelTrain, test) + meanPPVT)
residuals = data.frame(testx = test["adj_age"] + meanMomage, resid = test["adj_ppvt"] - predict(iqModelTrain, test) + meanPPVT)
ggplot(residuals, aes(x=testx, y=resid)) + geom_point() + geom_line(aes(y=0))
residuals = data.frame(testx = test["adj_age"] + meanMomage, resid = test["adj_ppvt"] - predict(iqModelTrain, test) + meanPPVT)
residuals
head(residuals)
residuals = data.frame(testx = test["adj_age"] + meanMomage, resid = test["adj_ppvt"] - predict(iqModelTrain, test) + meanPPVT)
ggplot(residuals, aes(x=adj_age, y=adj_ppvt)) + geom_point() + geom_line(aes(y=0))
ggplot(residuals, aes(x=adj_age, y=adj_ppvt)) + geom_point() + geom_line(aes(y=meanPPVT))
m = matrix(1:100, nrow=5, ncol = 20)
as.numeric(m)
dim(m) = c(20, 5)
m
as.numeric(m)
?identity
m * diag(10)
m = matrix(1:100, nrow=10)
m * diag(10)
min_matrix = function(n, m) {
mod_matrix = matrix(n * m, nrow=n)
for (i in 1:n) {
for (j in 1:m) {
mod_matrix[i,j] = min(c(i,j))
}
}
return(mod_matrix)
}
min_matrix(5,3)
min_matrix = function(n, m) {
mod_matrix = matrix(rep(0,n*m)), nrow=n)
for (i in 1:n) {
for (j in 1:m) {
mod_matrix[i,j] = min(c(i,j))
}
}
return(mod_matrix)
}
min_matrix = function(n, m) {
mod_matrix = matrix(rep(0,n*m), nrow=n)
for (i in 1:n) {
for (j in 1:m) {
mod_matrix[i,j] = min(c(i,j))
}
}
return(mod_matrix)
}
min_matrix(5,3)
?min()
m = 5
n = 3
mr = matrix(rep(1:m, n), nrow = n, by_row=TRUE)
mc = matrix(rep(1:m, n), nrow = n)
min_matrix = min(mr,mc)
?matrix
min_matrix(5,3)
m = 5
n = 3
mr = matrix(rep(1:m, n), nrow = n, byrow=TRUE)
mc = matrix(rep(1:m, n), nrow = n)
min_matrix = min(mr,mc)
min_matrix
mr
mc
min_matrix(5,3)
m = 5
n = 3
mr = matrix(rep(1:m, n), nrow = n, byrow=TRUE)
mc = matrix(rep(1:n, m), nrow = n)
min_matrix = min(mr,mc)
mr
mc
min_matrix
min_matrix = min(mr,mc)
min_matrix
?min
min_matrix = pmin(mr,mc)
min_matrix
?t
symmetrical = function(m) {
check = m != t(m)
return(sum(check) == 0)
}
symmetrical(diag(5))
symmetrical(diag(4) + matrix(c(1:16, nrow=4)))
symmetrical(diag(4) + matrix(c(1:16) nrow=4))
symmetrical(diag(4) + matrix(c(1:16), nrow=4))
symmetrical(matrix(1:20, nrow=5))
symmetrical = function(m) {
if(nrow(m)!=ncol(m))
return FALSE
check = m != t(m)
return(sum(check) == 0)
}
symmetrical = function(m) {
if(nrow(m)!=ncol(m))
return(FALSE)
check = m != t(m)
return(sum(check) == 0)
}
symmetrical(matrix(1:20, nrow=5))
dim(m) != dim(t(m))
?diag
trace = function(mat) {
dMat = diag(x = 1, nrow = nrow(mat),ncol = ncol(mat))
return(sum(dMat*mat))
}
m = matrix(1:10, nrow = 2)
m
tracedMat = trace(m)
tracedMat
trace = function(mat) {
dMat = diag(x = 1, nrow = nrow(mat),ncol = ncol(mat))
return(sum(dMat*mat))
}
m = matrix(1:10, nrow = 2)
m
m2 = matrix(13:22, nrow = 2)
m2
resultAdd = trace(m+m2)-(trace(m)+trace(m2))
resultAdd
resultMul = trace(m*m2)-(trace(m)*trace(m2))
resultMul
print(sapply(seq(0,10,0.01), mystery(x)))
mystery = function(x) {
matrix(c(cos(x), -sin(x), sin(x), cos(x)), nrow=2)
}
print(sapply(seq(0,10,0.01), mystery(x)))
print(sapply(seq(0,10,0.01), mystery))
print(sapply(seq(-1,1,0.01), mystery))
print(sapply(seq(-10,10,1), mystery))
mystery(0)
mystery(2*pi)
ggplot(df, aes(x=xvals)) + geom_point(aes(y=cosx)) + geom_point(aes(y=negsinx))
xvals = seq(-10,10,0.1)
df = data.frame(x = xvals, cosx = cos(xvals), negsinx = -sin(x), sinx = sin(x))
ggplot(df, aes(x=xvals)) + geom_point(aes(y=cosx)) + geom_point(aes(y=negsinx))
df = data.frame(x = xvals, cosx = cos(xvals), negsinx = -sin(xvals), sinx = sin(xvals))
ggplot(df, aes(x=xvals)) + geom_point(aes(y=cosx)) + geom_point(aes(y=negsinx))
ggplot(df, aes(x=xvals)) + geom_point(aes(y=cosx)) + geom_point(aes(y=negsinx, color="red"))
(ggplot(df, aes(x=xvals)) + geom_point(aes(y=cosx, color="blue"))
+ geom_point(aes(y=negsinx, color="red"))
+ geom_point(aes(y=sinx, color="green")))
inx, sinx, cosx
xvals = seq(-5,5,0.1)
df = data.frame(x = xvals, cosx = cos(xvals), negsinx = -sin(xvals), sinx = sin(xvals))
(ggplot(df, aes(x=xvals)) + geom_point(aes(y=cosx, color="blue"))
+ geom_point(aes(y=negsinx, color="red"))
+ geom_point(aes(y=sinx, color="green")))
example = list(1:4)
dim(example) = c(2,2)
dim(example)
str(example)
class(example) = "matrix"
example = list(example[1:2], example[2:4])
example
example = list(example[[1:2]], example[[2:4]])
example[1]
example = list(1:4)
example = list(example[[1:2]], example[[2:4]])
example[1:2]
as.list(1:4)
example = list(example[[1:2]], example[[3:4]])
example = list(1,2,3,4)
example = list(example[[1:2]], example[[3:4]])
example[1:2]
example = list(1,2,3,4)
example = list(unlist(example[1:2]), unlist(example[3:4]))
example
class(example) = "matrix"
attribute(example)
attrib(example)
attributes(example)
dim(example)
example = list(1,2,3,4)
example = list(example[1:2], example[3:4])
example
example = list(1,2,3,4)
example = list(example[1:2], example[3:4])
example
as.matrix(example)
example = list(1,2,3,4)
example = list(example[1:2], example[3:4])
dim(example) = c(2,2)
example = list(1,2,3,4)
example = list(example[1:2], example[3:4])
as.matrix(example)
dim(example)
example[1,1]
example = list(list(1), list(2), list(3), list(4))
as.matrix(example)
as.matrix(example, nrow=2)
matrix(example, nrow=2)
matrix(example, nrow=2)[1,2]
list(1,2)
a = list(1,2)
a[3] = 5
a
a[5] = 5
a
matrify = function(mlist) {
for (i in 1:length(mlist)) {
mlist[i] = list(mlist[i])
}
matrix(mlist, nrow=2)[1,2]
}
matrify(example)
matrify = function(mlist) {
for (i in 1:length(mlist)) {
mlist[i] = list(mlist[i])
}
matrix(mlist, nrow=2)
}
matrify(example)
matrix_mult = function(multA, multB)
{
if(nrow(multA) != nrow(multB) | ncol(multA) != ncol(multB)){
print("Oh no...")
print("nooo....")
print("NOOOOOOOO!!!!!!")
}
multMat = matrix(nrow = nrow(multA), ncol = ncol(multA))
for(i in 1:nrow(multMat)){
for(j in 1:ncol(multMat)){
multMat = multA*multB
}
}
return(multMat)
}
m = matrix_mult(matrix(1:9, nrow = 3),matrix(1:9, nrow = 3))
m
matrix_mult = function(multA, multB)
{
if(nrow(multA) != nrow(multB) | ncol(multA) != ncol(multB)){
print("Oh no...")
print("nooo....")
print("NOOOOOOOO!!!!!!")
}
multMat = matrix(nrow = nrow(multA), ncol = ncol(multA))
for(i in 1:nrow(multMat)){
for(j in 1:ncol(multMat)){
multMat[i,j] = multA[i,j]*multB[i,j]
}
}
return(multMat)
}
m = matrix_mult(matrix(1:9, nrow = 3),matrix(1:9, nrow = 3))
m
matrix_mult = function(multA, multB)
{
if(nrow(multA) != nrow(multB) | ncol(multA) != ncol(multB)){
print("Oh no...")
print("nooo....")
print("NOOOOOOOO!!!!!!")
}
multMat = matrix(nrow = nrow(multA), ncol = ncol(multA))
for(i in 1:nrow(multMat)){
for(j in 1:ncol(multMat)){
multMat[i,j] = multA[i,j]*multB[i,j]
}
}
return(multMat)
}
m = matrix_mult(matrix(1:9, nrow = 3),matrix(1:9, nrow = 3))
m
?timeit
??timeit
timeit
install.packages(timeit)
library("timeit")
install.packages("timeit")
library("timeit")
?timetit
?timeit
timeit(matrix_mult)
timeit(matrix_mult(matrix(1:9, nrow = 3),matrix(1:9, nrow = 3))
timeit(matrix_mult(matrix(1:9, nrow = 3),matrix(1:9, nrow = 3)))
matrix(1:9, nrow = 3),matrix(1:9, nrow = 3)
timeit(matrix_mult(matrix(1:9, nrow = 3),matrix(1:9, nrow = 3)))
t = timeit(matrix_mult(matrix(1:9, nrow = 3),matrix(1:9, nrow = 3)))
t
mean(t)
?timeit
